test <- countrycode("iso3c", "iso3c")
test <- read.csv("https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/blob/master/all/all.csv")
View(test)
test <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
View(test)
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
View(country_codes)
View(combined_counts)
colnames(combined_counts)[1] = "name"
View(combined_counts)
final_counts <- full_join(combined_counts, country_codes, by = "name")
View(final_counts)
rm(combined_counts)
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
colnames(combined_counts)[2] = "gold_medal"
colnames(combined_counts)[4] = "silver_medal"
colnames(combined_counts)[6] = "bronze_medal"
combined_counts$iso <- countrycode(combined_counts$region, "country.name", "iso3c")
View(combined_counts)
colnames(combined_counts)[1] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
final_counts <- full_join(combined_counts, country_codes, by = "name")
View(final_counts)
rm(country_codes)
rm(final_counts)
combined_counts$iso <- countrycode(combined_counts$region, "country.name", "iso3c")
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
colnames(combined_counts)[2] = "gold_medal"
colnames(combined_counts)[4] = "silver_medal"
colnames(combined_counts)[6] = "bronze_medal"
combined_counts$iso <- countrycode(combined_counts$region, "country.name", "iso3c")
colnames(combined_counts)[1] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(combined_counts, country_codes, by = "iso")
View(final_counts)
#plotly
final_counts$hover <- with(final_counts, paste(name.y, '<br>', "Gold", gold_count,
'<br>', "Silver", silver_count, "<br>",
"Bronze", bronze_count))
#grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(final_counts) %>%
add_trace(
z = ~gold_count,
color = ~gold_count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
final_counts$gold_count[final_counts$gold_count] <- 0
final_counts$gold_count[is.na(final_counts$gold_count)] <- 0
final_counts$silver_count[is.na(final_counts$silver_count)] <- 0
final_counts$bronze_count[is.na(final_counts$bronze_count)] <- 0
View(final_counts)
#plotly
final_counts$hover <- with(final_counts, paste(name.y, '<br>', "Gold", gold_count,
'<br>', "Silver", silver_count, "<br>",
"Bronze", bronze_count))
#grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(final_counts) %>%
add_trace(
z = ~gold_count,
color = ~gold_count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
total_medal_counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(total_medal_counts)
View(total_medal_counts)
total_medal_counts <- group_by(combined_medal_data, region) %>%
summarize(count = n())
View(total_medal_counts)
data <- fread("./data/athlete_events.csv") %>%
filter(Medal != is.na(Medal))
noc_regions <- fread("./data/noc_regions.csv")
combined_medal_data <- left_join(data, noc_regions, by = "NOC") %>%
filter(!is.na(region))
find_counts <- function(medal_type) {
count <- group_by(medal_type, region, Medal) %>%
summarize(count = n())
}
total_medals <- group_by(combined_medal_data, region) %>%
summarize(count = n())
colnames(total_medals)[3] = "total_count"
gold <- filter(combined_medal_data, Medal == "Gold") %>%
find_counts()
colnames(gold)[3] = "gold_count"
silver <- filter(combined_medal_data, Medal == "Silver") %>%
find_counts()
colnames(silver)[3] = "silver_count"
bronze <- filter(combined_medal_data, Medal == "Bronze") %>%
find_counts()
colnames(bronze)[3] = "bronze_count"
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
combined_counts <- left_join(combined_counts, total_medals, by = "region")
colnames(combined_counts)[2] = "gold_medal"
colnames(combined_counts)[4] = "silver_medal"
colnames(combined_counts)[6] = "bronze_medal"
View(combined_counts)
colnames(total_medals)[2] = "total_count"
gold <- filter(combined_medal_data, Medal == "Gold") %>%
find_counts()
colnames(gold)[3] = "gold_count"
silver <- filter(combined_medal_data, Medal == "Silver") %>%
find_counts()
colnames(silver)[3] = "silver_count"
bronze <- filter(combined_medal_data, Medal == "Bronze") %>%
find_counts()
colnames(bronze)[3] = "bronze_count"
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
combined_counts <- left_join(combined_counts, total_medals, by = "region")
colnames(combined_counts)[2] = "gold_medal"
colnames(combined_counts)[4] = "silver_medal"
colnames(combined_counts)[6] = "bronze_medal"
View(combined_counts)
combined_counts <- select(combined_counts, region, gold_count, silver_count,
bronze_count, total_count)
View(combined_counts)
combined_counts$iso <- countrycode(combined_counts$region, "country.name", "iso3c")
colnames(combined_counts)[1] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(combined_counts, country_codes, by = "iso")
final_counts$gold_count[is.na(final_counts$gold_count)] <- 0
final_counts$silver_count[is.na(final_counts$silver_count)] <- 0
final_counts$bronze_count[is.na(final_counts$bronze_count)] <- 0
View(final_counts)
shiny::runApp()
View(final_counts)
total_medals <- group_by(combined_medal_data, medal, region) %>%
summarize(count = n())
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(test)
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
test$iso <- countrycode(test$region, "country.name", "iso3c")
View(test)
colnames(test)[2] = "name"
View(test)
test_counts <- full_join(test, country_codes, by = "iso")
View(test_counts)
test$hover <- with(final_counts, paste(name.y, '<br>', Medal, count,
'<br>', Medal, count))
test$hover <- with(final_counts, paste(name.y, '<br>', Medal, count,
))
test$hover <- with(final_counts, paste(name.y, '<br>', Medal, count
))
test$hover <- with(final_counts, paste(name.y, '<br>', "blah", count
))
test$hover <- with(test_counts, paste(name.y, '<br>', Medal, count))
test$hover <- with(test_counts, paste(name.y, '<br>', Medal, count), Medal, count)
test$hover <- with(test_counts, paste(name.y, '<br>', Medal, count, Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
test_counts$hover <- with(test_counts, paste(name.y, '<br>', Medal, count, Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test_counts) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
combined_counts <- left_join(combined_counts, total_medals, by = "region")
View(combined_counts)
runApp()
runApp()
runApp()
p <- plot_geo(test_counts) %>%
add_trace(
z = paste0("~", "count"),
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
runApp()
runApp()
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(test)
test <- group_by(test, region) %>%
summarize(count = n())
View(test)
View(test)
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(test)
test(combined_medal_data, region) %>%
summarize(count = n())
test<- group_by(combined_medal_data, region) %>%
summarize(count = n())
View(test)
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(test)
test <- group_by(test, Medal, region) %>%
summarize(count = n())
View(test)
View(test)
test2 <- mutate(group_by(data, region), total = rowSums(data))
View(test)
test2 <- mutate(group_by(test, region), total = rowSums(data))
setwd("C:/Users/Jocelyn Afandi/Downloads")
Cereal <- read.table("cereal.tsv", header = TRUE, stringsAsFactors = FALSE)
View(Cereal)
setwd("~/Github/final")
runApp()
runApp()
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
test$iso <- countrycode(test$region, "country.name", "iso3c")
colnames(test)[2] = "name"
test_counts <- full_join(test, country_codes, by = "iso")
test_counts$hover <- with(test_counts, paste(name.y, '<br>', Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test_counts) %>%
add_trace(
z = paste0("~", "count"),
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
p <- plot_geo(test_counts) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
View(test_counts)
View(final_counts)
View(country_codes)
test_counts$count[is.na(test_counts$count)] <- 0
View(test_counts)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test_counts) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
source('~/Github/final/map_data.R')
View(counts)
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
library(dplyr)
library(mapdata)
library(data.table)
library(countrycode)
data <- read.csv("./data/athlete_events.csv", stringsAsFactors = FALSE) %>%
filter(Medal != is.na(Medal))
noc_regions <- fread("./data/noc_regions.csv")
combined_medal_data <- left_join(data, noc_regions, by = "NOC") %>%
filter(!is.na(region))
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
counts$iso <- countrycode(counts$region, "country.name", "iso3c")
colnames(counts)[2] = "name"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
final_counts <- full_join(counts, country_codes, by = "iso")
View(country_codes)
colnames(counts)[3] = "iso"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
final_counts <- full_join(counts, country_codes, by = "iso")
View(country_codes)
rm(counts)
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
counts$iso <- countrycode(counts$region, "country.name", "iso3c")
colnames(counts)[2] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
final_counts$hover <- with(final_counts, paste(name.y, '<br>', Medal, count))
View(final_counts)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(final_counts) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
View(final_counts)
runApp()
filtered <- filter(final_counts, Medal == "Bronze")
View(filtered)
data <- read.csv("./data/athlete_events.csv", stringsAsFactors = FALSE) %>%
filter(Medal != is.na(Medal))
noc_regions <- fread("./data/noc_regions.csv")
combined_medal_data <- left_join(data, noc_regions, by = "NOC") %>%
filter(!is.na(region))
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
counts$iso <- countrycode(counts$region, "country.name", "iso3c")
colnames(counts)[2] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
View(final_counts)
test <- filter(final_counts, name.y == "Australia")
test <- filter(final_counts, name.y == "Australia") %>%
rowSums()
View(test)
test <- filter(final_counts, name.y == "Australia") %>%
rowSums(count)
test2 <- rowSums(test$count)
test2 <- rowSums(test)
test2 <- cbind(test, total = rowSums(test))
test2 <- cbind(test, total = rowSums(test$count))
test2 <- sum(test$count)
runApp()
runApp()
test <- filter(final_counts, name.y == "Kosovo")
View(test)
test <- filter(final_counts, name == "Kosovo")
View(test)
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
test <- filter(final_counts, name == "Kosovo")
View(final_counts)
test <- filter(final_counts, name.x == "Kosovo")
View(test)
test <- filter(final_counts, name.x == "Individual Olympic Athletes")
View(test)
runApp()
data <- read.csv("./data/athlete_events.csv", stringsAsFactors = FALSE) %>%
filter(Medal != is.na(Medal))
noc_regions <- fread("./data/noc_regions.csv")
combined_medal_data <- left_join(data, noc_regions, by = "NOC") %>%
filter(!is.na(region))
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
counts$iso <- countrycode(counts$region, "country.name", "iso3c")
colnames(counts)[2] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
test <- filter(final_counts, count == 0)
View(test)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
showLand = TRUE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'Counts') %>%
layout(
title = 'Worldwide Olympic Medal Counts',
geo = g
)
test$hover <- with(filtered, paste(name.y, '<br>', Medal, count))
test$hover <- with(test, paste(name.y, '<br>', Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
showLand = TRUE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'Counts') %>%
layout(
title = 'Worldwide Olympic Medal Counts',
geo = g
)
print(p)
test <- final_counts
test$hover <- with(test, paste(name.y, '<br>', Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
showLand = TRUE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'Counts') %>%
layout(
title = 'Worldwide Olympic Medal Counts',
geo = g
)
print(p)
runApp()
