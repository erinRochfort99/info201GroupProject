<<<<<<< HEAD
test <- countrycode("iso3c", "iso3c")
test <- read.csv("https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/blob/master/all/all.csv")
View(test)
test <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
View(test)
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
View(country_codes)
View(combined_counts)
colnames(combined_counts)[1] = "name"
View(combined_counts)
final_counts <- full_join(combined_counts, country_codes, by = "name")
View(final_counts)
rm(combined_counts)
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
colnames(combined_counts)[2] = "gold_medal"
colnames(combined_counts)[4] = "silver_medal"
colnames(combined_counts)[6] = "bronze_medal"
combined_counts$iso <- countrycode(combined_counts$region, "country.name", "iso3c")
View(combined_counts)
colnames(combined_counts)[1] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
final_counts <- full_join(combined_counts, country_codes, by = "name")
View(final_counts)
rm(country_codes)
rm(final_counts)
combined_counts$iso <- countrycode(combined_counts$region, "country.name", "iso3c")
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
colnames(combined_counts)[2] = "gold_medal"
colnames(combined_counts)[4] = "silver_medal"
colnames(combined_counts)[6] = "bronze_medal"
combined_counts$iso <- countrycode(combined_counts$region, "country.name", "iso3c")
colnames(combined_counts)[1] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(combined_counts, country_codes, by = "iso")
View(final_counts)
#plotly
final_counts$hover <- with(final_counts, paste(name.y, '<br>', "Gold", gold_count,
'<br>', "Silver", silver_count, "<br>",
"Bronze", bronze_count))
#grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(final_counts) %>%
add_trace(
z = ~gold_count,
color = ~gold_count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
final_counts$gold_count[final_counts$gold_count] <- 0
final_counts$gold_count[is.na(final_counts$gold_count)] <- 0
final_counts$silver_count[is.na(final_counts$silver_count)] <- 0
final_counts$bronze_count[is.na(final_counts$bronze_count)] <- 0
View(final_counts)
#plotly
final_counts$hover <- with(final_counts, paste(name.y, '<br>', "Gold", gold_count,
'<br>', "Silver", silver_count, "<br>",
"Bronze", bronze_count))
#grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(final_counts) %>%
add_trace(
z = ~gold_count,
color = ~gold_count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
total_medal_counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(total_medal_counts)
View(total_medal_counts)
total_medal_counts <- group_by(combined_medal_data, region) %>%
summarize(count = n())
View(total_medal_counts)
data <- fread("./data/athlete_events.csv") %>%
filter(Medal != is.na(Medal))
noc_regions <- fread("./data/noc_regions.csv")
combined_medal_data <- left_join(data, noc_regions, by = "NOC") %>%
filter(!is.na(region))
find_counts <- function(medal_type) {
count <- group_by(medal_type, region, Medal) %>%
summarize(count = n())
}
total_medals <- group_by(combined_medal_data, region) %>%
summarize(count = n())
colnames(total_medals)[3] = "total_count"
gold <- filter(combined_medal_data, Medal == "Gold") %>%
find_counts()
colnames(gold)[3] = "gold_count"
silver <- filter(combined_medal_data, Medal == "Silver") %>%
find_counts()
colnames(silver)[3] = "silver_count"
bronze <- filter(combined_medal_data, Medal == "Bronze") %>%
find_counts()
colnames(bronze)[3] = "bronze_count"
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
combined_counts <- left_join(combined_counts, total_medals, by = "region")
colnames(combined_counts)[2] = "gold_medal"
colnames(combined_counts)[4] = "silver_medal"
colnames(combined_counts)[6] = "bronze_medal"
View(combined_counts)
colnames(total_medals)[2] = "total_count"
gold <- filter(combined_medal_data, Medal == "Gold") %>%
find_counts()
colnames(gold)[3] = "gold_count"
silver <- filter(combined_medal_data, Medal == "Silver") %>%
find_counts()
colnames(silver)[3] = "silver_count"
bronze <- filter(combined_medal_data, Medal == "Bronze") %>%
find_counts()
colnames(bronze)[3] = "bronze_count"
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
combined_counts <- left_join(combined_counts, total_medals, by = "region")
colnames(combined_counts)[2] = "gold_medal"
colnames(combined_counts)[4] = "silver_medal"
colnames(combined_counts)[6] = "bronze_medal"
View(combined_counts)
combined_counts <- select(combined_counts, region, gold_count, silver_count,
bronze_count, total_count)
View(combined_counts)
combined_counts$iso <- countrycode(combined_counts$region, "country.name", "iso3c")
colnames(combined_counts)[1] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(combined_counts, country_codes, by = "iso")
final_counts$gold_count[is.na(final_counts$gold_count)] <- 0
final_counts$silver_count[is.na(final_counts$silver_count)] <- 0
final_counts$bronze_count[is.na(final_counts$bronze_count)] <- 0
View(final_counts)
shiny::runApp()
View(final_counts)
total_medals <- group_by(combined_medal_data, medal, region) %>%
summarize(count = n())
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(test)
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
test$iso <- countrycode(test$region, "country.name", "iso3c")
View(test)
colnames(test)[2] = "name"
View(test)
test_counts <- full_join(test, country_codes, by = "iso")
View(test_counts)
test$hover <- with(final_counts, paste(name.y, '<br>', Medal, count,
'<br>', Medal, count))
test$hover <- with(final_counts, paste(name.y, '<br>', Medal, count,
))
test$hover <- with(final_counts, paste(name.y, '<br>', Medal, count
))
test$hover <- with(final_counts, paste(name.y, '<br>', "blah", count
))
test$hover <- with(test_counts, paste(name.y, '<br>', Medal, count))
test$hover <- with(test_counts, paste(name.y, '<br>', Medal, count), Medal, count)
test$hover <- with(test_counts, paste(name.y, '<br>', Medal, count, Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
test_counts$hover <- with(test_counts, paste(name.y, '<br>', Medal, count, Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test_counts) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
combined_counts <- left_join(gold, silver, by = "region")
combined_counts <- left_join(combined_counts, bronze, by = "region")
combined_counts <- left_join(combined_counts, total_medals, by = "region")
View(combined_counts)
runApp()
runApp()
runApp()
p <- plot_geo(test_counts) %>%
add_trace(
z = paste0("~", "count"),
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
runApp()
runApp()
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(test)
test <- group_by(test, region) %>%
summarize(count = n())
View(test)
View(test)
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(test)
test(combined_medal_data, region) %>%
summarize(count = n())
test<- group_by(combined_medal_data, region) %>%
summarize(count = n())
View(test)
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
View(test)
test <- group_by(test, Medal, region) %>%
summarize(count = n())
View(test)
View(test)
test2 <- mutate(group_by(data, region), total = rowSums(data))
View(test)
test2 <- mutate(group_by(test, region), total = rowSums(data))
setwd("C:/Users/Jocelyn Afandi/Downloads")
Cereal <- read.table("cereal.tsv", header = TRUE, stringsAsFactors = FALSE)
View(Cereal)
setwd("~/Github/final")
runApp()
runApp()
test <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
test$iso <- countrycode(test$region, "country.name", "iso3c")
colnames(test)[2] = "name"
test_counts <- full_join(test, country_codes, by = "iso")
test_counts$hover <- with(test_counts, paste(name.y, '<br>', Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test_counts) %>%
add_trace(
z = paste0("~", "count"),
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
p <- plot_geo(test_counts) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
View(test_counts)
View(final_counts)
View(country_codes)
test_counts$count[is.na(test_counts$count)] <- 0
View(test_counts)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test_counts) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
source('~/Github/final/map_data.R')
View(counts)
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
library(dplyr)
library(mapdata)
library(data.table)
library(countrycode)
data <- read.csv("./data/athlete_events.csv", stringsAsFactors = FALSE) %>%
filter(Medal != is.na(Medal))
noc_regions <- fread("./data/noc_regions.csv")
combined_medal_data <- left_join(data, noc_regions, by = "NOC") %>%
filter(!is.na(region))
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
counts$iso <- countrycode(counts$region, "country.name", "iso3c")
colnames(counts)[2] = "name"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
final_counts <- full_join(counts, country_codes, by = "iso")
View(country_codes)
colnames(counts)[3] = "iso"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
final_counts <- full_join(counts, country_codes, by = "iso")
View(country_codes)
rm(counts)
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
counts$iso <- countrycode(counts$region, "country.name", "iso3c")
colnames(counts)[2] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
final_counts$hover <- with(final_counts, paste(name.y, '<br>', Medal, count))
View(final_counts)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(final_counts) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'BLAH') %>%
layout(
title = 'blAH',
geo = g
)
print(p)
View(final_counts)
runApp()
filtered <- filter(final_counts, Medal == "Bronze")
View(filtered)
data <- read.csv("./data/athlete_events.csv", stringsAsFactors = FALSE) %>%
filter(Medal != is.na(Medal))
noc_regions <- fread("./data/noc_regions.csv")
combined_medal_data <- left_join(data, noc_regions, by = "NOC") %>%
filter(!is.na(region))
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
counts$iso <- countrycode(counts$region, "country.name", "iso3c")
colnames(counts)[2] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
View(final_counts)
test <- filter(final_counts, name.y == "Australia")
test <- filter(final_counts, name.y == "Australia") %>%
rowSums()
View(test)
test <- filter(final_counts, name.y == "Australia") %>%
rowSums(count)
test2 <- rowSums(test$count)
test2 <- rowSums(test)
test2 <- cbind(test, total = rowSums(test))
test2 <- cbind(test, total = rowSums(test$count))
test2 <- sum(test$count)
runApp()
runApp()
test <- filter(final_counts, name.y == "Kosovo")
View(test)
test <- filter(final_counts, name == "Kosovo")
View(test)
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
test <- filter(final_counts, name == "Kosovo")
View(final_counts)
test <- filter(final_counts, name.x == "Kosovo")
View(test)
test <- filter(final_counts, name.x == "Individual Olympic Athletes")
View(test)
runApp()
data <- read.csv("./data/athlete_events.csv", stringsAsFactors = FALSE) %>%
filter(Medal != is.na(Medal))
noc_regions <- fread("./data/noc_regions.csv")
combined_medal_data <- left_join(data, noc_regions, by = "NOC") %>%
filter(!is.na(region))
counts <- group_by(combined_medal_data, Medal, region) %>%
summarize(count = n())
counts$iso <- countrycode(counts$region, "country.name", "iso3c")
colnames(counts)[2] = "name"
country_codes <- read.csv("https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv")
colnames(country_codes)[3] = "iso"
final_counts <- full_join(counts, country_codes, by = "iso")
final_counts$count[is.na(final_counts$count)] <- 0
test <- filter(final_counts, count == 0)
View(test)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
showLand = TRUE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'Counts') %>%
layout(
title = 'Worldwide Olympic Medal Counts',
geo = g
)
test$hover <- with(filtered, paste(name.y, '<br>', Medal, count))
test$hover <- with(test, paste(name.y, '<br>', Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
showLand = TRUE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'Counts') %>%
layout(
title = 'Worldwide Olympic Medal Counts',
geo = g
)
print(p)
test <- final_counts
test$hover <- with(test, paste(name.y, '<br>', Medal, count))
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
showLand = TRUE,
projection = list(type = 'Mercator')
)
p <- plot_geo(test) %>%
add_trace(
z = ~count,
color = ~count,
colors = 'Blues',
text = ~hover,
locations = ~iso
) %>%
colorbar(title = 'Counts') %>%
layout(
title = 'Worldwide Olympic Medal Counts',
geo = g
)
print(p)
=======
yep$totalMedals = yep$gold_count + yep$silver_count + yep$bronze_count
library("dplyr")
library("ggplot2")
events <- read.csv("./data/athlete_events.csv")
events <- select(events, Team, NOC, Medal)
noc_count  <- events %>%
count(NOC)
gold_count  <- events %>%
filter(Medal == "Gold") %>%
count(NOC)
colnames(gold_count)[2] <- "GoldCount"
silver_count <- events %>%
filter(Medal == "Silver") %>%
count(NOC)
colnames(silver_count)[2] <- "SilverCount"
bronze_count <- events %>%
filter(Medal == "Bronze") %>%
count(NOC)
colnames(silver_count)[2] <- "BronzeCount"
yep <- left_join(noc_count, gold_count, by = "NOC")
yep <- left_join(yep, silver_count, by = "NOC")
library("dplyr")
library("ggplot2")
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
library("dplyr")
library("ggplot2")
events <- read.csv("./data/athlete_events.csv")
setwd("C:/Users/ERroc/Desktop/INFO201/info201GroupProject")
events <- read.csv("./data/athlete_events.csv")
events <- select(events, Team, NOC, Medal)
noc_count  <- events %>%
count(NOC)
gold_count  <- events %>%
filter(Medal == "Gold") %>%
count(NOC)
colnames(gold_count)[2] <- "GoldCount"
silver_count <- events %>%
filter(Medal == "Silver") %>%
count(NOC)
colnames(silver_count)[2] <- "SilverCount"
bronze_count <- events %>%
filter(Medal == "Bronze") %>%
count(NOC)
colnames(silver_count)[2] <- "BronzeCount"
View(bronze_count)
View(gold_count)
View(silver_count)
bronze_count <- events %>%
filter(Medal == "Bronze") %>%
count(NOC)
colnames(bronze_count)[2] <- "BronzeCount"
View(silver_count)
silver_count <- events %>%
filter(Medal == "Silver") %>%
count(NOC)
colnames(silver_count)[2] <- "SilverCount"
bronze_count <- events %>%
filter(Medal == "Bronze") %>%
count(NOC)
colnames(bronze_count)[2] <- "BronzeCount"
View(silver_count)
View(bronze_count)
View(gold_count)
View(noc_count)
yep <- left_join(noc_count, gold_count, by = "NOC")
yep <- left_join(yep, silver_count, by = "NOC")
yep <- left_join(yep, bronze_count, by = "NOC")
yep$totalMedals = yep$gold_count + yep$silver_count + yep$bronze_count
yep$totalMedals = yep$GoldCount + yep$SilverCount + yep$BronzeCount
View(yep)
yep[is.na(yep)] <- 0
View(yep)
yep$totalMedals = yep$GoldCount + yep$SilverCount + yep$BronzeCount
noc_count  <- events %>%
count(NOC)
colnames(noc_count) <- "TeamSize"
gold_count  <- events %>%
filter(Medal == "Gold") %>%
count(NOC)
colnames(gold_count)[2] <- "GoldCount"
silver_count <- events %>%
filter(Medal == "Silver") %>%
count(NOC)
colnames(silver_count)[2] <- "SilverCount"
bronze_count <- events %>%
filter(Medal == "Bronze") %>%
count(NOC)
colnames(bronze_count)[2] <- "BronzeCount"
yep <- left_join(noc_count, gold_count, by = "NOC")
yep <- left_join(yep, silver_count, by = "NOC")
yep <- left_join(yep, bronze_count, by = "NOC")
yep[is.na(yep)] <- 0
yep$totalMedals = yep$GoldCount + yep$SilverCount + yep$BronzeCount
library("dplyr")
library("ggplot2")
events <- read.csv("./data/athlete_events.csv")
events <- select(events, Team, NOC, Medal)
noc_count  <- events %>%
count(NOC)
colnames(noc_count) <- "TeamSize"
gold_count  <- events %>%
filter(Medal == "Gold") %>%
count(NOC)
colnames(gold_count)[2] <- "GoldCount"
silver_count <- events %>%
filter(Medal == "Silver") %>%
count(NOC)
colnames(silver_count)[2] <- "SilverCount"
bronze_count <- events %>%
filter(Medal == "Bronze") %>%
count(NOC)
colnames(bronze_count)[2] <- "BronzeCount"
yep <- left_join(noc_count, gold_count, by = "NOC")
yep <- left_join(yep, silver_count, by = "NOC")
yep <- left_join(yep, bronze_count, by = "NOC")
yep[is.na(yep)] <- 0
yep$totalMedals = yep$GoldCount + yep$SilverCount + yep$BronzeCount
noc_count  <- events %>%
count(NOC)
colnames(noc_count)[2] <- "TeamSize"
gold_count  <- events %>%
filter(Medal == "Gold") %>%
count(NOC)
colnames(gold_count)[2] <- "GoldCount"
silver_count <- events %>%
filter(Medal == "Silver") %>%
count(NOC)
colnames(silver_count)[2] <- "SilverCount"
bronze_count <- events %>%
filter(Medal == "Bronze") %>%
count(NOC)
colnames(bronze_count)[2] <- "BronzeCount"
yep <- left_join(noc_count, gold_count, by = "NOC")
yep <- left_join(yep, silver_count, by = "NOC")
yep <- left_join(yep, bronze_count, by = "NOC")
yep[is.na(yep)] <- 0
yep$totalMedals = yep$GoldCount + yep$SilverCount + yep$BronzeCount
View(yep)
ggplot(data = sum, aes(x = TeamSize, y = totalMedals)) +
geom_count()
ggplot(sum) +
geom_point(aes(x = TeamSize, y = totalMedals))
ggplot(sum) +
geom_point(aes(x = TeamSize, y = totalMedals))
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
View(events)
View(bronze_count)
View(yep)
---
title: "UFO Data Summary"
output:
html_document:
code_folding: hide
---
```{r setup, include = FALSE, warning = FALSE, error = FALSE, message = FALSE}
library(knitr)
library(kableExtra)
source("scripts/chart1.R")
source("scripts/summary.R")
source("scripts/table_2.R")
ufo_df <- read.csv("data/UFOCoords.csv", stringsAsFactors = FALSE)
source("timings/create_results_table.R")
knitr::opts_chunk$set(echo = TRUE)
```
## Timing tests
This is a report on the execution speed of two functions that both serves the purpose of filter out the data of the UFO location from Canada. One function is using piping while using the dplyr library filter function while the other is not using piping. The function is ran on four members' computers and the chart showed the results of the time of the runs for the functions.
```{r eval = FALSE}
library("dplyr")
library("microbenchmark")
if(Sys.info()[["user"]] == "Jocelyn Afandi") {
PROJECTDIR <- file.path("Documents", "Github", "a7-collaboration-be-eejj", "timings")
fileName <- "jocelyn_results.Rdat"
user <- "jocelyn"
} else if(Sys.info()[["user"]] == "ERroc") {
PROJECTDIR <- file.path("Desktop", "Info201", "a7-collaboration-be-eejj", "timings")
fileName <- "erin_results.Rdat"
user <- "erin"
} else if(Sys.info()[["user"]] == "glasu") {
PROJECTDIR <- file.path("Desktop", "info201", "a7-collaboration-be-eejj", "timings")
fileName <- "erika_results.Rdat"
user <- "erika"
} else {
PROJECTDIR <- file.path("Desktop", "gitpractice", "a7-collaboration-be-eejj", "timings")
fileName <- "jenny_results.Rdat"
user <- "jenny"
}
original_data <- read.csv("../data/UFOCoords.csv", stringsAsFactors = FALSE)
piped <- function(data_set) {
filter(data_set, Country == "CANADA") %>%
filter(State == "ON") %>%
filter(Shape == "Light") %>%
filter(AM.PM == "PM")
}
non_piped <- function(data_set) {
data <- filter(data_set, Country == "CANADA")
data <- filter(data, State == "ON")
data <- filter(data, Shape == "Light")
data <- filter(data, AM.PM == "PM")
}
timing_1 <- microbenchmark(piped(original_data))
timing_2 <- microbenchmark(non_piped(original_data))
```
```{r timing_function, echo = FALSE, warning = FALSE, error = FALSE, message = FALSE}
table <- create_timings_table()
kable(table, "markdown")
```
## UFO sightings
```{r summary, echo = FALSE}
sum <- describeData(ufo_df)
data_col <- sum$Variables
data_num <- sum$Length
data_countries <- sum$Countries
data_shapes <- sum$Shapes
data_time_range <- sum$Time_range
data_states <- sum$States
```
There are some facts about the dataset:
* There are `r data_num` rows of data on `r data_col`.
+ We only used data reported in **USA**. But _the distinct countries that are reported_ are `r data_countries`.
+ States that are included in the data are `r data_states`
+ The different _UFO shapes_ that are reported are `r data_shapes`.
+ The _time range of the data_ is `r data_time_range`
```{r plots, echo = FALSE}
map(ufo_df)
create_table_2(ufo_df)
```
events <- select(events, Team, NOC, Medal)
View(events)
events <- read.csv("./data/athlete_events.csv")
View(events)
View(events)
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
ggplot(sum) +
geom_point(aes(x = TeamSize, y = totalMedals))
events <- select(events, Team, NOC, Medal)
count_medal <- function(data, medal){
data <- events %>%
filter(Medal == medal) %>%
count(NOC)
colnames(data)[2] <- paste(medal, "Count")
}
gold_count <- count_medal(events, "Gold")
silver_count <- count_medal(events, "Silver")
bronze_count <- count_medal(events, "Bronze")
count_medal <- function(data, medal){
data <- events %>%
filter(Medal == medal) %>%
count(NOC)
colnames(data)[2] <- paste(medal, "Count")
return(data)
}
gold_count <- count_medal(events, "Gold")
silver_count <- count_medal(events, "Silver")
bronze_count <- count_medal(events, "Bronze")
sum <- left_join(noc_count, gold_count, by = "NOC")
sum <- left_join(yep, silver_count, by = "NOC")
sum <- left_join(yep, bronze_count, by = "NOC")
sum[is.na(sum)] <- 0
sum$totalMedals = sum$GoldCount + sum$SilverCount + sum$BronzeCount
ggplot(sum) +
geom_point(aes(x = TeamSize, y = totalMedals))
View(sum)
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
View(sum)
events <- read.csv("./data/athlete_events.csv")
events <- select(events, Team, NOC, Medal)
noc_count  <- events %>%
count(NOC)
colnames(noc_count)[2] <- "TeamSize"
gold_count  <- events %>%
filter(Medal == "Gold") %>%
count(NOC)
colnames(gold_count)[2] <- "GoldCount"
silver_count <- events %>%
filter(Medal == "Silver") %>%
count(NOC)
colnames(silver_count)[2] <- "SilverCount"
bronze_count <- events %>%
filter(Medal == "Bronze") %>%
count(NOC)
colnames(bronze_count)[2] <- "BronzeCount"
count_medal <- function(data, medal){
data <- events %>%
filter(Medal == medal) %>%
count(NOC)
colnames(data)[2] <- paste(medal, "Count")
return(data)
}
gold_count <- count_medal(events, "Gold")
silver_count <- count_medal(events, "Silver")
bronze_count <- count_medal(events, "Bronze")
sum <- left_join(noc_count, gold_count, by = "NOC")
sum <- left_join(sum, silver_count, by = "NOC")
sum <- left_join(sum, bronze_count, by = "NOC")
sum[is.na(sum)] <- 0
sum$totalMedals = sum$GoldCount + sum$SilverCount + sum$BronzeCount
ggplot(sum) +
geom_point(aes(x = TeamSize, y = totalMedals))
View(gold_count)
count_medal <- function(data, medal){
data <- events %>%
filter(Medal == medal) %>%
count(NOC)
colnames(data)[2] <- paste0(medal, "Count")
return(data)
}
gold_count <- count_medal(events, "Gold")
silver_count <- count_medal(events, "Silver")
bronze_count <- count_medal(events, "Bronze")
sum <- left_join(noc_count, gold_count, by = "NOC")
sum <- left_join(sum, silver_count, by = "NOC")
sum <- left_join(sum, bronze_count, by = "NOC")
sum[is.na(sum)] <- 0
sum$totalMedals = sum$GoldCount + sum$SilverCount + sum$BronzeCount
ggplot(sum) +
geom_point(aes(x = TeamSize, y = totalMedals))
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("quatreg")
library("ggplot2")
install.packages("quatreg")
runApp()
runApp()
runApp()
View(events)
sum <- left_join(sum, bronze_count, by = "Team")
sum[is.na(sum)] <- 0
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
View(gold_count)
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
sum <- left_join(team_count, gold_count, by = "Team")
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
runApp()
colnames(data)[2] <- paste0(medal)
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
source('C:/Users/ERroc/Desktop/INFO201/info201GroupProject/scatterPlot.R', echo=TRUE)
runApp()
runApp()
runApp()
View(sum)
original <- read.csv("./data/athlete_events.csv")
events <- select(original, Team, NOC, Medal)
View(original)
runApp()
runApp()
runApp()
medal_choices
medal_choices <- distinct(events, Medal) %>%
filter(Medal != "NA")
medal_choices
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
>>>>>>> 04e2ba38b7543484a26e45dc2fb8ef901ae0e35c
runApp()
